# Generated by Django 5.2.3 on 2025-07-03 15:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="System",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="系统名称"
                    ),
                ),
            ],
            options={
                "verbose_name": "一级分类",
                "verbose_name_plural": "一级分类",
            },
        ),
        migrations.CreateModel(
            name="SecondaryCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="二级分类名称")),
                (
                    "system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="faults.system",
                        verbose_name="所属系统",
                    ),
                ),
            ],
            options={
                "verbose_name": "二级分类",
                "verbose_name_plural": "二级分类",
            },
        ),
        migrations.CreateModel(
            name="ThirdCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="三级分类名称")),
                (
                    "secondary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="faults.secondarycategory",
                        verbose_name="所属二级分类",
                    ),
                ),
            ],
            options={
                "verbose_name": "三级分类",
                "verbose_name_plural": "三级分类",
            },
        ),
        migrations.CreateModel(
            name="FourthCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="四级分类名称")),
                (
                    "third",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="faults.thirdcategory",
                        verbose_name="所属三级分类",
                    ),
                ),
            ],
            options={
                "verbose_name": "四级分类",
                "verbose_name_plural": "四级分类",
            },
        ),
        migrations.CreateModel(
            name="FaultRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="日期")),
                ("time", models.TimeField(verbose_name="时间")),
                ("train_number", models.CharField(max_length=10, verbose_name="车号")),
                ("source", models.CharField(max_length=100, verbose_name="故障来源")),
                (
                    "fault_type",
                    models.CharField(max_length=50, verbose_name="故障类型"),
                ),
                ("phenomenon", models.TextField(verbose_name="故障现象")),
                ("location", models.CharField(max_length=200, verbose_name="位置")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待处理"),
                            ("processing", "处理中"),
                            ("resolved", "已解决"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "technician",
                    models.CharField(max_length=100, verbose_name="处理人员"),
                ),
                ("cause", models.TextField(verbose_name="故障原因")),
                ("reporter", models.CharField(max_length=100, verbose_name="报告人")),
                ("receiver", models.CharField(max_length=100, verbose_name="接收人")),
                ("progress", models.TextField(verbose_name="处理进度")),
                (
                    "expected_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="预计完成日期"
                    ),
                ),
                ("solution", models.TextField(verbose_name="解决方案")),
                (
                    "part_replaced",
                    models.BooleanField(default=False, verbose_name="更换备件"),
                ),
                (
                    "part_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="备件名称"
                    ),
                ),
                (
                    "part_quantity",
                    models.IntegerField(blank=True, null=True, verbose_name="备件数量"),
                ),
                (
                    "materials",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="使用材料"
                    ),
                ),
                (
                    "tools",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="使用工具"
                    ),
                ),
                (
                    "location_time",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="定位用时(分钟)"
                    ),
                ),
                (
                    "replacement_time",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="更换用时(分钟)"
                    ),
                ),
                (
                    "legacy_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="遗留项处理日期"
                    ),
                ),
                ("registrar", models.CharField(max_length=100, verbose_name="登记人")),
                (
                    "registration_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="登记时间"),
                ),
                (
                    "is_valid",
                    models.BooleanField(default=True, verbose_name="是否有效"),
                ),
                (
                    "image_count",
                    models.PositiveIntegerField(default=0, verbose_name="图片数量"),
                ),
                (
                    "image_paths",
                    models.JSONField(blank=True, default=list, verbose_name="图片路径"),
                ),
                (
                    "modified_by",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="修改人"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="修改时间"),
                ),
                (
                    "fourth",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="faults.fourthcategory",
                        verbose_name="四级分类",
                    ),
                ),
                (
                    "secondary",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="faults.secondarycategory",
                        verbose_name="二级分类",
                    ),
                ),
                (
                    "system",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="faults.system",
                        verbose_name="系统",
                    ),
                ),
                (
                    "third",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="faults.thirdcategory",
                        verbose_name="三级分类",
                    ),
                ),
            ],
            options={
                "verbose_name": "故障记录",
                "verbose_name_plural": "故障记录",
                "ordering": ["-date", "-time"],
            },
        ),
        migrations.AddConstraint(
            model_name="secondarycategory",
            constraint=models.UniqueConstraint(
                fields=("system", "name"), name="unique_secondary_per_system"
            ),
        ),
        migrations.AddConstraint(
            model_name="thirdcategory",
            constraint=models.UniqueConstraint(
                fields=("secondary", "name"), name="unique_third_per_secondary"
            ),
        ),
        migrations.AddConstraint(
            model_name="fourthcategory",
            constraint=models.UniqueConstraint(
                fields=("third", "name"), name="unique_fourth_per_third"
            ),
        ),
    ]
